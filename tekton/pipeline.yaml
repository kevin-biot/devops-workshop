apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: java-webapp-pipeline
spec:
  params:
    - name: git-url
      type: string
      description: Public Git repo URL
    - name: git-revision
      type: string
      description: Branch, tag or commit
      default: "dev"
    - name: build-name
      type: string
      description: Shipwright Build name
    - name: namespace
      type: string
      description: Target OpenShift project
  workspaces:
    - name: source
      description: Where source is checked out
  tasks:
    - name: clone
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: {{NAMESPACE}}
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)
      workspaces:
        - name: source
          workspace: source

    - name: build
      runAfter: [clone]
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: maven-build
          - name: namespace
            value: {{NAMESPACE}}
      workspaces:
        - name: source
          workspace: source

    - name: sanity
      runAfter: [build]
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: war-sanity-check
          - name: namespace
            value: {{NAMESPACE}}
      workspaces:
        - name: source
          workspace: source

    - name: shipwright
      runAfter: [sanity]
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: shipwright-trigger
          - name: namespace
            value: {{NAMESPACE}}
      params:
        - name: BUILD_NAME
          value: $(params.build-name)
        - name: NAMESPACE
          value: $(params.namespace)

    - name: deploy
      runAfter: [shipwright]
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: deploy
          - name: namespace
            value: {{NAMESPACE}}
      params:
        - name: manifest-path
          value: k8s/deployment.yaml
        - name: namespace
          value: $(params.namespace)
      workspaces:
        - name: source
          workspace: source
